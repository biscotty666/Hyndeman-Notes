beer_fit <- train |>
model(
Mean = MEAN(Beer),
`Naive` = NAIVE(Beer),
`Seasonal naive` = SNAIVE(Beer)
)
beer_fc <- beer_fit |> forecast(h = 14)
beer_fc |>
autoplot(train, level = NULL) +
autolayer(
filter_index(aus_production, "2007 Q1" ~ .),
colour = 'black'
) +
labs(
y = "Megalitres",
title = "Forecasts for quarterly beer production"
) +
guides(colour = guide_legend(title = "Forecast"))
# Re-index based on trading days
google_stock <- gafa_stock |>
filter(Symbol == "GOOG", year(Date) >= 2015) |>
mutate(day = row_number()) |>
update_tsibble(index = day, regular = TRUE)
# Filter the year of interest
google_2015 <- google_stock |> filter(year(Date) == 2015)
# Fit the models
google_fit <- google_2015 |>
model(
Mean = MEAN(Close),
`Naïve` = NAIVE(Close),
Drift = NAIVE(Close ~ drift())
)
# Produce forecasts for the trading days in January 2016
google_jan_2016 <- google_stock |>
filter(yearmonth(Date) == yearmonth("2016 Jan"))
google_fc <- google_fit |>
forecast(new_data = google_jan_2016)
# Plot the forecasts
google_fc |>
autoplot(google_2015, level = NULL) +
autolayer(google_jan_2016, Close, colour = "black") +
labs(y = "$US",
title = "Google daily closing stock prices",
subtitle = "(Jan 2015 - Jan 2016)") +
guides(colour = guide_legend(title = "Forecast"))
augment(beer_fit)
autoplot(google_2015, Close) +
labs(y = "$US",
title = "Google daily closing stock prices in 2015")
aug <- google_2015 |>
model(NAIVE(Close)) |>
augment()
autoplot(aug, .innov) +
labs(y = "$US",
title = "Residuals from the naïve method")
aug |>
ggplot(aes(x = .innov)) +
geom_histogram() +
labs(title = "Histogram of residuals")
aug |>
ACF(.innov) |>
autoplot() +
labs(title = "Residuals from the naïve method")
google_2015 |>
model(NAIVE(Close)) |>
gg_tsresiduals()
aug |> features(.innov, box_pierce, lag=10)
aug |> features(.innov, ljung_box, lag=10)
fit <- google_2015 |> model(RW(Close ~ drift()))
tidy(fit)
augment(fit) |> features(.innov, ljung_box, lag=10)
google_2015 |>
model(NAIVE(Close)) |>
forecast(h = 10) |>
hilo()
google_2015 |>
model(NAIVE(Close)) |>
forecast(h = 10) |>
autoplot(google_2015) +
labs(title="Google daily closing stock price", y="$US" )
fit <- google_2015 |>
model(NAIVE(Close))
sim <- fit |> generate(h = 30, times = 5, bootstrap = TRUE)
sim
google_2015 |>
ggplot(aes(x = day)) +
geom_line(aes(y = Close)) +
geom_line(aes(y = .sim, color = as.factor(.rep)),
data = sim) +
labs(title="Google daily closing stock price", y="$US" ) +
guides(colour = "none")
fc <- fit |> forecast(h = 30, bootstrap = TRUE)
fc
autoplot(fc, google_2015) +
labs(title = "Google daily closing stock price", y="$US")
google_2015 |>
model(NAIVE(Close)) |>
forecast(h = 10, bootstrap = TRUE, times = 1000) |>
hilo()
fc <- prices |>
filter(!is.na(eggs)) |>
model(RW(log(eggs) ~ drift())) |>
forecast(h = 50) |>
mutate(.median = median(eggs))
fc |>
autoplot(prices |> filter(!is.na(eggs)), level = 80) +
geom_line(aes(y = .median), data = fc, linetype = 2, col = "blue") +
labs(title = "Annual egg prices",
y = "$US (in cents adjusted for inflation) ")
fc |>
autoplot(prices |> filter(!is.na(eggs)), level = 80) +
geom_line(aes(y = .median), data = fc, linetype = 2, col = "blue") +
labs(title = "Annual egg prices",
y = "$US (in cents adjusted for inflation) ")
dcmp |>
model(NAIVE(season_adjust)) |>
forecast() |>
autoplot(dcmp) +
labs(y = "Number of people",
title = "US retail employment")
us_retail_employment <- us_employment |>
filter(year(Month) >= 1990, Title == "Retail Trade")
dcmp <- us_retail_employment |>
model(STL(Employed ~ trend(window = 7), robust=TRUE)) |>
components() |>
select(-.model)
dcmp |>
model(NAIVE(season_adjust)) |>
forecast() |>
autoplot(dcmp) +
labs(y = "Number of people",
title = "US retail employment")
us_retail_employment <- us_employment |>
filter(year(Month) >= 1990, Title == "Retail Trade")
dcmp <- us_retail_employment |>
model(STL(Employed ~ trend(window = 7), robust=TRUE)) |>
components() |>
select(-.model)
dcmp |>
model(NAIVE(season_adjust)) |>
forecast() |>
autoplot(dcmp) +
labs(y = "Number of people",
title = "US retail employment")
us_retail_employment <- us_employment |>
filter(year(Month) >= 1990, Title == "Retail Trade")
dcmp <- us_retail_employment |>
model(STL(Employed ~ trend(window = 7), robust=TRUE)) |>
components() |>
select(-.model)
dcmp |>
model(NAIVE(season_adjust)) |>
forecast() |>
autoplot(dcmp) +
labs(y = "Number of people",
title = "US retail employment")
fit_dcmp <- us_retail_employment |>
model(stlf = decomposition_model(
STL(Employed ~ trend(window = 7), robust = TRUE),
NAIVE(season_adjust)
))
fit_dcmp |>
forecast() |>
autoplot(us_retail_employment)+
labs(y = "Number of people",
title = "US retail employment")
fit_dcmp |> gg_tsresiduals()
aus_production |> filter(year(Quarter) >= 1995)
aus_production |> filter_index("1995 Q1" ~ .)
aus_production |> slice(n()-19:0)
aus_retail |>
group_by(State, Industry) |>
slice(1:12)
recent_production <- aus_production |>
filter(year(Quarter) >= 1992)
beer_train <- recent_production |>
filter(year(Quarter) <= 2007)
beer_fit <- beer_train |>
model(
Mean = MEAN(Beer),
`Naïve` = NAIVE(Beer),
`Seasonal naïve` = SNAIVE(Beer),
Drift = RW(Beer ~ drift())
)
beer_fc <- beer_fit |>
forecast(h = 10)
beer_fc |>
autoplot(
aus_production |> filter(year(Quarter) >= 1992),
level = NULL
) +
labs(
y = "Megalitres",
title = "Forecasts for quarterly beer production"
) +
guides(color = guide_legend(title="Forecast"))
accuracy(beer_fc, recent_production)
google_fit <- google_2015 |>
model(
Mean = MEAN(Close),
`Naïve` = NAIVE(Close),
Drift = RW(Close ~ drift())
)
google_fc <- google_fit |>
forecast(google_jan_2016)
google_fc |>
autoplot(bind_rows(google_2015, google_jan_2016),
level = NULL) +
labs(y = "$US",
title = "Google closing stock prices from Jan 2015") +
guides(color = guide_legend(title = "Forecast"))
accuracy(google_fc, google_stock)
google_fc |>
filter(.model == "Naïve") |>
autoplot(bind_rows(google_2015, google_jan_2016), level = 80) +
labs(y = "$US",
title = "Google closing stock prices")
google_fc |>
filter(.model == "Naïve") |>
autoplot(bind_rows(google_2015, google_jan_2016), level = 80) +
labs(y = "$US",
title = "Google closing stock prices",
caption = "Naïve forecasts of the Google stock price for Jan 2016, along with 80% prediction intervals")
library(dslabs)
library(fpp3)
library(feasts)
us_change
library(fpp3)
class(us_change)
names(us_change)
str(us_change)
str(us_change)
us_change |>
pivot_longer(c(Consumption, Income), names_to = "Series") |>
str()
us_change |>
pivot_longer(c(Consumption, Income), names_to = "Series") |>
autoplot(value) +
labs(y = "% change")
us_change |>
ggplot(aes(x = Income, y = Consumption)) +
labs(y = "Consumption (quarterly % change)",
x = "Income (quarterly % change)") +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
us_change |>
ggplot(aes(x = Income, y = Consumption)) +
labs(y = "Consumption (quarterly % change)",
x = "Income (quarterly % change)") +
geom_point() +
geom_smooth(method = "lm")
us_change |>
ggplot(aes(x = Income, y = Consumption)) +
labs(y = "Consumption (quarterly % change)",
x = "Income (quarterly % change)") +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
us_change |>
ggplot(aes(x = Income, y = Consumption)) +
labs(y = "Consumption (quarterly % change)",
x = "Income (quarterly % change)",
caption = "Scatterplot of quarterly changes in consumption expenditure versus quarterly changes in personal income and the fitted regression line.") +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
us_change |>
ggplot(aes(x = Income, y = Consumption)) +
labs(y = "Consumption (quarterly % change)",
x = "Income (quarterly % change)",
caption = "Quarterly changes in consumption expenditure versus quarterly changes in personal income and the fitted regression line.") +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
us_change |>
model(TSLM(Consumption ~ Income)) |>
report()
us_change |>
select(-Consumption, -Income) |>
pivot_longer(-Quarter) |>
str()
us_change |>
select(-Consumption, -Income) |>
pivot_longer(-Quarter) |>
ggplot(aes(Quarter, value, color = name)) +
geom_line() +
facet_grid(name ~ ., scales = "free_y") +
guides(color = "none") +
labs(y = "% change")
us_change |>
select(-Consumption, -Income) |>
pivot_longer(-Quarter) |>
ggplot(aes(Quarter, value, color = name)) +
geom_line() +
facet_grid(name ~ ., scales = "free_y") +
guides(color = "none") +
labs(y = "% change",
title = "Industrial production, personal savings and unemployment",
subtitle = "Quarterly percent changes 1970Q1 to 2019Q2"
)
us_change |>
GGally::ggpairs(columns = 2:6)
```{r, message=FALSE}
us_change |>
GGally::ggpairs(columns = 2:6)
fit_consMR <- us_change |>
model(tslm = TSLM(Consumption ~ Income + Production +
Unemployment + Savings))
report(fit_consMR)
augment(fit_consMR) |>
ggplot(aes(x = Quarter)) +
geom_line(aes(y = Consumption, colour = "Data")) +
geom_line(aes(y = .fitted, colour = "Fitted")) +
labs(y = NULL,
title = "Percent change in US consumption expenditure",
subtitle = "Time plot of actual vs. predicted") +
geom_abline(intercept = 0, slope = 1)
augment(fit_consMR) |>
ggplot(aes(x = Quarter)) +
geom_line(aes(y = Consumption, colour = "Data")) +
geom_line(aes(y = .fitted, colour = "Fitted")) +
labs(y = NULL,
title = "Percent change in US consumption expenditure",
subtitle = "Time plot of actual vs. predicted") +
scale_colour_manual(values = c(Data = "black", Fitted = "#D55E00")) +
guides(colour = guide_legend(title = NULL))
augment(fit_consMR) |>
ggplot(aes(Consumption, .fitted)) +
geom_point() +
labs(
y = "Fitted (predicted values)",
x = "Data (actual values)",
title = "Percent change in US consumption expenditure"
) +
geom_abline(intercept = 0, slope = 1)
fit_consMR |> gg_tsresiduals()
augment(fit_consMR) |>
features(.innov, ljung_box, lag = 10)
augment(fit_consMR) |>
features(.innov, ljung_box, lag = 10) |> print.AsIs()
us_change |>
left_join(residuals(fit_consMR), by = "Quarter") |>
pivot_longer(Income:Unemployment,
names_to = "regression", values_to = "x") |>
ggplot(aes(x, .resid)) +
geom_point() +
facet_wrap(. ~ regressor, scales = "free_x") +
labs(y = "Residuals", x = "")
us_change |>
left_join(residuals(fit_consMR), by = "Quarter") |>
pivot_longer(Income:Unemployment,
names_to = "regressor", values_to = "x") |>
ggplot(aes(x, .resid)) +
geom_point() +
facet_wrap(. ~ regressor, scales = "free_x") +
labs(y = "Residuals", x = "")
augment(fit_consMR) |>
ggplot(aes(.fitted, .resid)) +
geom_point() +
labs(x = "Fitted", y = "Residuals")
fit <- aus_airpassengers |>
filter(Year <= 2011) |>
left_join(guinea_rice, by = "Year") |>
model(TSLM(Passengers ~ Production))
report(fit)
fit |> gg_tsresiduals()
recent_production <- aus_production |>
filter(year(Quarter))
recent_production <- aus_production |>
filter(year(Quarter) >= 1992)
recent_production |>
autoplot(Beer) +
labs(y = "Megalitres",
title = "Australian quarterly beer production")
fit_beer <- recent_production |>
model(TSLM(Beer ~ trend() + season()))
report(fit_beer)
augment(fit_beer) |>
ggplot(aes(Quarter)) +
geom_line(aes(y = Beer, colour = "Data")) +
geom_line(aes(y = .fitted, colour = "Fitted")) +
scale_colour_manual(
values = c(Data = "black", Fitted = "#D55E00")
) +
labs(y = "Megaliters",
title = "Australian quarterly beer production") +
guides(color = guide_legend(title = "Series"))
augment(fit_beer) |>
ggplot(aes(Quarter)) +
geom_line(aes(y = Beer, colour = "Data")) +
geom_line(aes(y = .fitted, colour = "Fitted")) +
scale_colour_manual(
values = c(Data = "black", Fitted = "#D55E00")
) +
labs(y = "Megaliters",
title = "Australian quarterly beer production",
caption = "Time plot of beer production and predicted beer production") +
guides(color = guide_legend(title = "Series"))
augment(fit_beer) |>
ggplot(aes(x = Beer, y = .fitted,
colour = factor(quarter(Quarter)))) +
geom_point() +
labs(y = "Fitted", x = "Actual values",
title = "Australian quarterly beer production") +
geom_abline(intercept = 0, slope = 1) +
guides(colour = guide_legend(title = "Quarter"))
augment(fit_beer) |>
ggplot(aes(x = Beer, y = .fitted,
colour = factor(quarter(Quarter)))) +
geom_point() +
labs(y = "Fitted", x = "Actual values",
title = "Australian quarterly beer production",
caption = "Actual beer production plotted against predicted beer production") +
geom_abline(intercept = 0, slope = 1) +
guides(colour = guide_legend(title = "Quarter"))
fourier_beer <- recent_production |>
model(TSLM(Beer ~ trend() + fourier(K = 2)))
report(fourier_beer)
glance(fit_consMR)
glance(fit_consMR) |> print.AsIs()
glance(fit_consMR) |>
select(adj_r_squared, CV, AIC, AICc, BIC) |>
print.AsIs()
glance(fit_consMR) |>
select(adj_r_squared, CV, AIC, AICc, BIC) |>
print.AsIs()
recent_production <- aus_production |>
filter(year(Quarter) >= 1992)
fit_beer <- recent_production |>
model(TSLM(Beer ~ trend() + season()))
fc_beer <- forecast(fit_beer)
fc_beer |>
autoplot(recent_production) +
labs(
title = "Forecasts of beer production using regression",
y = "megaliters",
caption = "Forecasts from the regression model for beer production. The dark shaded region shows 80% prediction intervals and the light shaded region shows 95% prediction intervals"
)
fc_beer |>
autoplot(recent_production) +
labs(
title = "Forecasts of beer production using regression",
y = "megaliters",
)
?new_data
str(us_change)
str(new_data(us_change, n = 3))
new_data(us_change, n = 3)
new_data(us_change, n = 3) |> mutate(Income=1, Savings=0.5, Unemployment=0)
fit_consBest <- us_change |>
model(lm = TSLM(
Consumption ~ Income + Savings + Unemployment
))
future_scenarios <- scenarios(
Increase = new_data(us_change, 4) |>
mutate(Income = 1, Savings = 0.5, Unemployment = 0),
Decrease = new_data(us_change, 4) |>
mutate(Income = -1, Savings = -0.5, Unemployment = 0),
names_to = "Scenario"
)
fc <- forecast(fit_consBest, new_data = future_scenarios)
us_change |>
autoplot(Consumption) +
autolayer(fc) +
labs(title = "US consumption", y = "% change")
fit_cons <- us_change |>
model(TSLM(Consumption ~ Income))
new_cons <- scenarios(
"Average increase" = new_data(us_change, 4) |>
mutate(Income = mean(us_change$Income)),
"Extreme increase" = new_data(us_change, 4) |>
mutate(income = 12),
names_to = "Scenario"
)
fcast <- forecast(fit_cons, new_cons)
fit_cons <- us_change |>
model(TSLM(Consumption ~ Income))
new_cons <- scenarios(
"Average increase" = new_data(us_change, 4) |>
mutate(Income = mean(us_change$Income)),
"Extreme increase" = new_data(us_change, 4) |>
mutate(Income = 12),
names_to = "Scenario"
)
fcast <- forecast(fit_cons, new_cons)
us_change |>
autoplot(Consumption) +
autolayer(fcast) +
labs(title = "US consumption", y = "% change")
boston_men <- boston_marathon |>
filter(Year >= 1924) |>
filter(Event == "Men's open division") |>
mutate(Minutes = as.numeric(Time)/60)
boston_men |>
autoplot(Minutes)
fit_trends <- boston_men |>
model(
linear = TSLM(Minutes ~ trend()),
exponential = TSLM(log(Minutes) ~ trend()),
piecwise = TSLM(Minutes ~ trend(knots = c(1950, 1980)))
)
fc_trends <- fit_trends |> forecast(h = 10)
boston_men |>
autoplot(Minutes) +
geom_line(data = fitted(fit_trends),
aes(y = .fitted, color = .model)) +
autolayer(fc_trends, alpha = 0.5, level = 95) +
labs(y = "Minutes",
title = "Boston marathon winning times")
library(fpp3)
algeria_economy <- global_economy |>
filter(Country == "Algeria")
algeria_economy |>
autoplot(Exports) +
labs(y = "% of GDP", title = "Exports: Algeria")
